{
  "openapi": "3.0.1",
  "info": {
    "title": "teacher quiz",
    "description": "teacher quiz api",
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "tags": [],
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "obj"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "create new one user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          }
        }
      }
    },
    "user/:{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get specific user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "update specific user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "delete specific user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          }
        }
      }
    },
    "/answers": {
      "get": {
        "tags": [
          "answers"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "obj"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of answers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/answers"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "answers"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/answers"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "create new one answers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/answers"
                }
              }
            }
          }
        }
      }
    },
    "answers/:{id}": {
      "get": {
        "tags": [
          "answers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get specific answers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/answers"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "answers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/answers"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "update specific answers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/answers"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "answers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "delete specific answers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/answers"
                }
              }
            }
          }
        }
      }
    },
    "/challengestock": {
      "get": {
        "tags": [
          "challengestock"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "obj"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of challengestock",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/challengestock"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "challengestock"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/challengestock"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "create new one challengestock",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/challengestock"
                }
              }
            }
          }
        }
      }
    },
    "challengestock/:{id}": {
      "get": {
        "tags": [
          "challengestock"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get specific challengestock",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/challengestock"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "challengestock"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/challengestock"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "update specific challengestock",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/challengestock"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "challengestock"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "delete specific challengestock",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/challengestock"
                }
              }
            }
          }
        }
      }
    },
    "/challenges": {
      "get": {
        "tags": [
          "challenges"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "obj"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of challenges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/challenges"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "challenges"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/challenges"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "create new one challenges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/challenges"
                }
              }
            }
          }
        }
      }
    },
    "challenges/:{id}": {
      "get": {
        "tags": [
          "challenges"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get specific challenges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/challenges"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "challenges"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/challenges"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "update specific challenges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/challenges"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "challenges"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "delete specific challenges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/challenges"
                }
              }
            }
          }
        }
      }
    },
    "/challenges/hello": {
      "get": {
        "tags": [
          "challenges"
        ],
        "responses": {
          "200": {
            "description": "default response in class challenges",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/challenges"
                }
              }
            }
          }
        }
      }
    },
    "/classes": {
      "get": {
        "tags": [
          "classes"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "obj"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of classes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/classes"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "classes"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/classes"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "create new one classes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/classes"
                }
              }
            }
          }
        }
      }
    },
    "classes/:{id}": {
      "get": {
        "tags": [
          "classes"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get specific classes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/classes"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "classes"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/classes"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "update specific classes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/classes"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "classes"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "delete specific classes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/classes"
                }
              }
            }
          }
        }
      }
    },
    "/questions": {
      "get": {
        "tags": [
          "questions"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "obj"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of questions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/questions"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "questions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/questions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "create new one questions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/questions"
                }
              }
            }
          }
        }
      }
    },
    "questions/:{id}": {
      "get": {
        "tags": [
          "questions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get specific questions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/questions"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "questions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/questions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "update specific questions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/questions"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "questions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "delete specific questions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/questions"
                }
              }
            }
          }
        }
      }
    },
    "/role": {
      "get": {
        "tags": [
          "role"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "obj"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/role"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "role"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/role"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "create new one role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/role"
                }
              }
            }
          }
        }
      }
    },
    "role/:{id}": {
      "get": {
        "tags": [
          "role"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get specific role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/role"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "role"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/role"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "update specific role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/role"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "role"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "delete specific role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/role"
                }
              }
            }
          }
        }
      }
    },
    "/rolemapping": {
      "get": {
        "tags": [
          "rolemapping"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "obj"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of rolemapping",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rolemapping"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "rolemapping"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/rolemapping"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "create new one rolemapping",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rolemapping"
                }
              }
            }
          }
        }
      }
    },
    "rolemapping/:{id}": {
      "get": {
        "tags": [
          "rolemapping"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get specific rolemapping",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rolemapping"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "rolemapping"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/rolemapping"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "update specific rolemapping",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rolemapping"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "rolemapping"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "delete specific rolemapping",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rolemapping"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "user": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "userName": {
            "type": "string"
          },
          "IDcode": {
            "type": "string"
          },
          "createdAt": {
            "type": "date"
          },
          "updatedAt": {
            "type": "date"
          },
          "UserId": {
            "type": "integer"
          }
        }
      },
      "answers": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "answer": {
            "type": "text"
          },
          "score": {
            "type": "integer"
          },
          "createdAt": {
            "type": "date"
          },
          "updatedAt": {
            "type": "date"
          },
          "UserId": {
            "type": "integer"
          },
          "QuestionId": {
            "type": "integer"
          },
          "ChallengeId": {
            "type": "integer"
          }
        }
      },
      "challengestock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "date"
          },
          "updatedAt": {
            "type": "date"
          },
          "UserId": {
            "type": "integer"
          }
        }
      },
      "challenges": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "date"
          },
          "updatedAt": {
            "type": "date"
          },
          "UserId": {
            "type": "integer"
          },
          "ChallengeStockId": {
            "type": "integer"
          }
        }
      },
      "classes": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "date"
          },
          "updatedAt": {
            "type": "date"
          }
        }
      },
      "questions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "date"
          },
          "updatedAt": {
            "type": "date"
          },
          "ChallengeId": {
            "type": "integer"
          }
        }
      },
      "role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "date"
          },
          "updatedAt": {
            "type": "date"
          }
        }
      },
      "rolemapping": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "date"
          },
          "updatedAt": {
            "type": "date"
          },
          "RoleMappingId": {
            "type": "integer"
          },
          "RoleId": {
            "type": "integer"
          },
          "UserId": {
            "type": "integer"
          }
        }
      }
    }
  }
}